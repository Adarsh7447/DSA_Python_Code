class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        start = 0 
        max_length = 0 
        dic = {}

        for end in range(len(s)):
            if s[end] in dic and dic[s[end]] >= start:
                start = dic[s[end]] + 1
            
            dic[s[end]] = end
            max_length = max(max_length,end-start+1)
        
        return max_length

TimeComplexity = Big O(n) 
SpaceComplexity = Big O(1)
