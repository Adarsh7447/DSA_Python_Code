class Solution:
    def rangeSumBST(self, root: Optional[TreeNode], low: int, high: int) -> int:
        def dfs(root): 
            if root is not None:
                nonlocal total_sum
                if root.val >= low and root.val <= high:
                    total_sum = total_sum + root.val
                if root.val > low:
                    dfs(root.left)
                if root.val < high:
                    dfs(root.right)
        total_sum = 0
        dfs(root)
        return total_sum
TimeComplexity = BigO(n) 
SpaceComplexity = BigO(H)
