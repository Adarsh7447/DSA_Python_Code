class Solution:
    def knightDialer(self, n: int) -> int:
        if n == 1:
            return 10
        mod = 10 ** 9 + 7 
        jumps = [
            [4,6],
            [8,6],
            [7,9],
            [4,8],
            [0,9,3],
            [],
            [1,7,0],
            [6,2],
            [1,3],
            [4,2]
        ]
        dp = [1] * 10
        for _ in range(n-1):
            next_dp = [0] * 10
            for n in range(10):
                for j in jumps[n]:
                    next_dp[j] = (next_dp[j] + dp[n]) % mod
            dp = next_dp
        res = 0 
        for k in dp:
            res = res + k
        return res % mod
